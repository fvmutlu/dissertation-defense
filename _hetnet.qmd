## Power & Caching in Wireless HetNets {visibility="uncounted"}

- Delay minimization in multi-hop wireless HetNets via caching and power control[^hetnetref].

<img src="images/hetnet.svg" style="display: block; margin-left: auto; margin-right: auto; width: 45%; height: 45%;">

[^hetnetref]: "Joint Power Control and Caching for Transmission Delay Minimization in Wireless HetNets", Malak, D., Mutlu, F. V., Zhang, J., & Yeh, E. M., ToN 2023 @malak2023joint.

::: {.footer}
Conclusion & Other Work
:::

## Power & Caching in Wireless HetNets {visibility="uncounted"}

- Delay minimization in multi-hop wireless HetNets via caching and power control.
- Individual contributions:
    - Subgradient projection algorithm for finding local minima.
    - Numerical experiments using model built in Julia.

::: {.footer}
Conclusion & Other Work
:::

## Power & Caching in Wireless HetNets {.smaller visibility="uncounted"}

::: columns
::: {.column width=50%}
**Model**: Multi-hop wireless network with *helpers*[^shanmugam]:

-   MCs, SCs, and users; MCs and SCs have wireline backhaul connections.
-   All wireless transmissions interfere with each other.
-   All nodes can be equipped with caches.
-   Fixed shortest path routing.

**Goal**: Minimize delay in network by controlling power and caching allocations.
:::
::: {.column width=50%}
![HetNet illustration](images/hetnet.svg){style="display: block; transform: translateY(25%);"}
:::
:::

[^shanmugam]: "Femtocaching: Wireless content delivery through distributed caching helpers.", Shanmugam, K., Golrezaei, N., Dimakis, A. G., Molisch, A. F., & Caire, G, IEEE Trans. Inf. Theory, 2013 @shanmugam2013femtocaching.

::: {.footer}
Conclusion & Other Work
:::

## Power & Caching in Wireless HetNets {.smaller visibility="uncounted"}

- **Objective:** Total user request delay.

```{=tex}
\begin{equation*}
D^o(X,S)=\sum\limits_{(i,p)\in\mathcal{R}}{\lambda_{(i,p)}{D_{(i,p)}^o(X,S)}}
\end{equation*}
```
```{=tex}
\begin{equation*}
D_{(i,p)}^o(X,S)=\sum\limits_{k=1}^{|p|-1}f(\text{SINR}_{p_{k+1}p_k}(S))\prod\limits_{l=1}^k (1-x_{p_l i})
\end{equation*}
```

::: {.footer}
Conclusion & Other Work
:::

## Power & Caching in Wireless HetNets {.smaller visibility="uncounted"}

- **Objective:** Total user request delay.
- **Challenge 1:** Problem is NP-hard due to the *caching component* @shanmugam2013femtocaching.
    - Convex relaxation on *binary caching variables* leads to reduced-complexity formulation (RCF).
        ```{=tex}
        \begin{equation*}
        D(Y,S)=\sum\limits_{(i,p)\in\mathcal{R}}{\lambda_{(i,p)} D_{(i,p)}(Y,S)}
        \end{equation*}
        ```
        ```{=tex}
        \begin{equation*}
        D_{(i,p)}(Y,S)={\sum\limits_{k=1}^{|p|-1}f(\text{SINR}_{p_{k+1}p_k}(S)) g_{p_k i}(Y) }
        \end{equation*}
        ```
        ```{=tex}
        \begin{equation*}
        g_{p_k i}(Y)=1-\min\Big\{1,\sum\limits_{l=1}^k y_{p_l i}\Big\},\,\quad\forall\, y_{p_li}\in [0, 1]
        \end{equation*}
        ```
        
::: {.footer}
Conclusion & Other Work
:::

## Power & Caching in Wireless HetNets {.smaller visibility="uncounted"}

- **Objective:** Total user request delay.
- **Challenge 1:** Problem is NP-hard due to the *caching component* @shanmugam2013femtocaching.
    - Convex relaxation on *binary caching variables* leads to reduced-complexity formulation (RCF).
    - Given fixed power allocations $S$, polynomial-time $1-1/e$ approximation can be constructed @ioannidis2017jointly. 
        
::: {.footer}
Conclusion & Other Work
:::

## Power & Caching in Wireless HetNets {.smaller visibility="uncounted"}

- **Objective:** Total user request delay.
- **Challenge 1:** Problem is NP-hard due to the *caching component* @shanmugam2013femtocaching.
    - Convex relaxation on *binary caching variables* leads to reduced-complexity formulation (RCF).
    - Given fixed power allocations $S$, polynomial-time $1-1/e$ approximation can be constructed @ioannidis2017jointly. 
- **Challenge 2:** Problem is not jointly convex due to interference-dependent link costs.
    ```{=tex}
    \begin{equation*}
    f(\text{SINR}_{vu}(S)) = \frac{1}{\log_2(1+\text{SINR}_{vu}(S))}
    \end{equation*}
    ```
    ```{=tex}
    \begin{equation*}
    \text{SINR}_{vu}(S)=\frac{ G_{vu}s_{vu}}{N_u+  \sum\limits_{j\in V\backslash v}G_{ju}\sum\limits_{w}s_{jw}+G_{vu}\sum\limits_{w\neq u}s_{vw}}
    \end{equation*}
    ```
    
::: {.footer}
Conclusion & Other Work
:::

## Power & Caching in Wireless HetNets {.smaller visibility="uncounted"}

- **Objective:** Total user request delay.
- **Challenge 1:** Problem is NP-hard due to the *caching component* @shanmugam2013femtocaching.
    - Convex relaxation on *binary caching variables* leads to reduced-complexity formulation (RCF).
    - Given fixed power allocations $S$, polynomial-time $1-1/e$ approximation can be constructed @ioannidis2017jointly. 
- **Challenge 2:** Problem is not jointly convex due to interference-dependent link costs.
    - *Biconvex* in logarithms of power variables under high SINR conditions, allowing *alternating optimization* method @malak2023joint.
    
::: {.footer}
Conclusion & Other Work
:::

## Subgradient Projection Algorithm {.smaller visibility="uncounted"}

::: columns
::: {.column width=50%}
::: {style="font-size: 80%;"}
```pseudocode
#| html-line-number: true
\begin{algorithm}
\caption{Subgradient Projection}
\begin{algorithmic}
\State{Choose $S^{0}$, $Y^{0}$, small scalar $\epsilon > 0$ and let $t=0$.}
\While{$D^t - D^{t-1} > \epsilon \;$}
    \State{Compute subgradients $d^t_S, d^t_Y$.}
    \State{Determine step sizes $\xi^t_Y$, $\xi^t_S $.}
    \State{Compute projected variables $\bar{S}^t$, ${\bar{Y}}^t$.}
    \State{$t \gets t+1, S^{t+1} \gets \bar{S}^t, Y^{t+1} \gets \bar{Y}^t$.}
\EndWhile
\State{$(Y^{*}_{sub},S^{*}_{sub}) \gets (Y^{t},S^{t})$.}
\State{Perform pipage rounding on $(Y^{*}_{sub},S^{*}_{sub})$.}
\end{algorithmic}
\end{algorithm}
```
:::
::: {style="font-size: 80%;"}
```{=tex}
\begin{equation*}
\begin{split}
    & \quad d_S^t = \nabla_S D(Y^t,S^t), \; d^t_{Y} \in \partial_{Y}D(Y^t,S^t) \\
    & \quad \xi^t_{Y} = \frac{D^t - \hat{D}^t}{\norm{d_{Y}^t}}, \; \xi_S^t = \frac{D^t - \hat{D}^t}{\norm{d_S^t}} \\
    & \quad \bar{S}^t = \mc{P}_{\mc{D}_S}(S^t - \xi_{S}^t d_{S}^t), \; \bar{Y}^t = \mc{P}_{\mc{D}_Y}(Y^t - \xi^t_{Y} d^t_{Y})
\end{split}
\end{equation*}
```
::: {style="font-size: 80%;"}
$\hat{D}^t = \min_{j = 0,\cdots,t} D(Y^t,S^t) - \delta_t$; estimate of local minimum.
$\mc{P}_{\mc{D}}(A)$; projection of $A$ into set $\mc{D}$.
:::
:::
:::
::: {.column width=50%}
::: {style="font-size: 100%;"}
:::
:::
:::

::: {.footer}
Power & Caching in Wireless HetNets
:::

## Power & Caching in Wireless HetNets {.smaller visibility="uncounted"}
Experimental results under different scenarios compare performance against baseline replacement policies paired with cache-unaware power optimization

![&emsp;&emsp;&emsp;&emsp; Power budget](images/hetnet_result1.svg){width="55%" height="55%"}

::: {.footer}
Conclusion & Other Work
:::

## Power & Caching in Wireless HetNets {.smaller visibility="uncounted"}
Experimental results under different scenarios compare performance against baseline replacement policies paired with cache-unaware power optimization

![&emsp;&emsp;&emsp;&emsp; SC cache capacity](images/hetnet_result3.svg){width="55%" height="55%"}

::: {.footer}
Conclusion & Other Work
:::

## Power & Caching in Wireless HetNets {.smaller visibility="uncounted"}
Experimental results under different scenarios compare performance against baseline replacement policies paired with cache-unaware power optimization

![&emsp;&emsp;&emsp;&emsp; Zipf parameter](images/hetnet_result2.svg){width="55%" height="55%"}

::: {.footer}
Conclusion & Other Work
:::